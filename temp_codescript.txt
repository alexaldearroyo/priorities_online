src/styles.css:

/* src/styles.css */

@tailwind base;
@tailwind components;
@tailwind utilities;


html {
    height: 100%;
}

body {
    height: 100%;

    font-size: 1.5rem;
}


.flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

#title {
    flex: 3;
    color: #71717a;
    font-size: 2.25rem;
    font-family: monospace;
    min-height: 7rem; 
    max-height: 7rem; 
}

#mainContainer {
    flex: 14;
    justify-content: flex-start;
}

#mainBox {
    min-height: calc(100% * 13/14);
    width: 70%;
    border-radius: 40px;
    display: flex;
    align-items: flex-start;
    position: relative;
    margin-bottom: 30px;
}

#sideBar {
    width: calc(100% * 6/21);
    border-top-left-radius: 40px;
    border-bottom-left-radius: 40px;
    height: 100%;
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    overflow: auto;
    max-height: 100%;
}


#sideBar::-webkit-scrollbar {
    width: 15px;
    background-color: transparent;
}

#sideBar::-webkit-scrollbar-thumb {
    background-color: #A8A29E;
    border-radius: 6px;
    background-clip: content-box;
    border: 4px solid transparent;
}

#sideBar::-webkit-scrollbar-track {
    border-radius: 15px;
    margin: 40px;
}

#sideBarHeader {
    height: calc(100% * 2/14);
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    /* overflow-y: auto;
    margin-bottom: 0.75rem; */
}

#burgerMenu {
    width: 3rem;
    height: 3rem;
    position: absolute;
    top: 1.25rem;
    left: 1.25rem;
    border-radius: 50%;
    align-self: flex-start;
    font-size: 1.5rem;
    transition: transform 0.2s, box-shadow 0.2s;
    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
}

#burgerMenu:hover i.fas {
    color: #71717a;
}

#burgerMenu:hover {
    transform: scale(1.1);
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
}

#sideBarMenu {
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    padding-top: 2rem;
    padding-left: 3.75rem;
    color: #4B5563;
    font-family: Arial, Helvetica, sans-serif;
    cursor: pointer;
    font-size: 1.5rem;
}

#sideBarMenu>div {
    padding-bottom: 0.5rem;

}

#sideBarMenu>div i {
    width: 30px;
    margin-right: 0.5rem;
}

#sideBarMenu>div:hover i {
    color:#6b7280;
}

#prioritiesSubMenu>div {
    padding-top: 0.5rem;
    margin-left: 2.5rem;
    color: #78716C;
    display: flex;
    align-items: center;
    font-size: 1.25rem;
}

#prioritiesSubMenu>div:last-child {
    padding-bottom: 0.75rem;
}

/* Bullet points */
#prioritiesSubMenu>div::before {
    content: '';
    display: inline-block;
    margin-right: 1rem;
    height: 0.75rem;
    width: 0.75rem;
    background-color: #78716C;
    border-radius: 50%;
}

#contentBox {
    width: calc(100% * 15/21);
    border-top-right-radius: 47px;
    border-bottom-right-radius: 47px;
    min-height: calc(100% * 11.5/14);
    display: flex;
    flex-direction: column;
    overflow-x: auto;
    overflow-y: auto;
}

#contentBoxHeader {
    height: calc(100% * 1.5/14);
    min-height: 4rem;
    width: 100%;
    font-family: 'Arial', sans-serif;
    font-size: 1.5rem;
    font-weight: 100;
    padding-top: 1rem;
    margin-bottom: 0.75rem;
}

#contentBoxMain {
    height: calc(100% * 11.5/14);
    width: 100%;
    font-size: 1.25rem;
}

#footer {
    flex: 1.75;
    font-size: 1.15rem;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 5rem;
}

#footer .fa-github {
    margin-right: 1.25rem;
    font-size: 2rem;
}

.font-arial {
    font-family: Arial, sans-serif;
}


/* ANIMATIONS AND TRANSITIONS */

.expand {
    width: 75%;
    border-top-left-radius: 47px;
    border-bottom-left-radius: 47px;
}

#contentBox.expand {
    flex-grow: 1;
}

.rotate-icon {
    transition: transform 0.5s ease-in-out;
}

.rotated {
    transform: rotate(180deg);
}

.rotated-down {
    transform: rotate(90deg) translateX(25%);
}

.active i {
    color: #6b7280;
}

.hidden {
    display: none;
}

/* SPECIAL CLASSES */

.addButton {
    background-color: #D4D4D8;
    border-radius: 14px;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    width: 175px;
    height: 2.5rem;
    font-size: smaller;
    color: #4B5563;
    transition: background-color 0.3s, transform 0.3s;
}

.addButton:hover {
    background-color: #cacaca;
    color: black;
    transform: scale(1.07);
}

.box {
    border: 1.5px solid #a8a29e;
    border-radius: 18px;
    padding-top: 0;
    padding: 20px;
    margin-top: 0;
    margin-bottom: 20px;
    width: 90%;
    display: flex;
    flex-direction: column;
    overflow-y: auto; 
    max-height: 100%;
}


.selector {
    border-radius: 10px;
    background-color: #BFDBFE;
    appearance: none;
    padding: 5px 10px;
    flex: 1;
    color: #4B5563;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1.25em' height='1.25em' fill='currentColor' class='bi bi-chevron-down' viewBox='0 0 16 16'%3E%3Cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right .7em center;
    padding-right: 2.5em;
    height: 2.5rem;
    max-height: 2.5rem;;
    font-size: 1rem;
}

.selector:hover {
    transform: scale(1.1);
}

input[type="date"]:not(.has-date) {
    color: transparent;
}

input[type="date"]:not(.has-date)::before {
    content: "Date";
    color: #4B5563;
    display: inline-block;
    margin-left: 5px;
}

input[type="date"].has-date::before {
    content: "" !important;
}

.high-priority {
    background-color: #EF4444;
    color: #fee2e2;
}

.medium-priority {
    background-color: #FBBF24;
    color: #374151;
}

.low-priority {
    background-color: #0EA5E9;
    color: #e0f2fe;
}

.createButton {
    border-radius: 10px;
    background-color: #D4D4D8;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    height: 2.5rem;
    font-size: 1rem;
    color: #374151;
}

.createButton:hover {
    background-color: #cacaca;
    color: black;
    transform: scale(1.07);
}

.cancelButton {
    border-radius: 10px;
    background-color: #BE123C;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    height: 2.5rem;
    color: #FECDD3;
    font-size: 1rem;

}

.cancelButton:hover {
    background-color: #9f1239;
    color: white;
    transform: scale(1.07);
}

.listContainer {
    overflow-y: auto;
    max-height: 100%;
    width: 100%;
    max-height: none;
    height: auto; 
}


/* RESPONSIVENESS */

@media (max-width: 1200px) {
    #sideBar {
        display: none;
        width: 100%;
        height: 100%;
        border-radius: 40px;
        position: absolute;
        overflow-y: auto;
        box-sizing: border-box;
    }

    #sideBarMenu {
        align-items: flex-start;
        font-size: 1.5rem;
        overflow-y: auto;
    }

    #sideBarMenu>div {
        padding-bottom: 1.5rem;
        padding-left: 25%;
    }

    #prioritiesSubMenu {
        padding-top: 0.5rem;
        margin-left: 0;
    }

    #prioritiesSubMenu>div {
        align-items: center;
        margin-left: 2rem;
    }

    #prioritiesSubMenu>div:last-child {
        padding-bottom: 0;
    }

    #burgerMenu {
        z-index: 20;
        top: 1.25rem;
        left: 1.25rem;
        font-size: 1.5rem;
    }

    #addTaskBoxLeft,
    #addTaskBoxRight,
    #addTaskBoxLeftBottom {
        width: 100%;
    }

    .selector {
        margin-bottom: 10px;
        flex-basis: 100%;
        margin-right: 5px; 
    }


}

@media screen and (max-height: 500px) {
    #footer {
        display: none;
    }
}

----------------------------------------

src/tasks.js:

import { saveTask, getTasks } from "./localStorage.js";

function loadTasksModule() {
  $("#contentBoxHeader").empty();
  $("#contentBoxMain").empty();
  $("#contentBoxHeader").html("Tasks");
  $("#contentBoxMain").addClass("flex flex-col");

  const taskButtonContainer = $("<div>", {
    id: "taskButtonContainer",
    class: "flex-center h-1/6 w-full mt-4 mb-4",
  });
  const tasksListContainer = $("<div>", {
    id: "tasksListContainer",
    class: "listContainer flex-center h-5/6",
  }).html("Task List Container");

  $("#contentBoxMain").append(taskButtonContainer, tasksListContainer);

  $("#contentBoxMain").on("click", "#addTaskButton", function () {
    const addTaskBox = $("<div>", {
      id: "addTaskBox",
      class: "box flex flex-col md:flex-row w-full justify-between gap-x-6",
    });

    const addTaskBoxLeft = $("<div>", {
      id: "addTaskBoxLeft",
      class: "flex flex-1 flex-col items-center",
      style: "flex: 10;",
    });

    const addTaskBoxLeftTop = $("<div>", {
      id: "addTaskBoxLeftTop",
      class: "h-1/2 w-full flex justify-center items-center",
    });

    const taskInputBox = $("<input>", {
      type: "text",
      class:
        "inputBox rounded-lg border-2 border-gray-700 bg-white w-full p-2 py-1  mb-2", // TODO: Later define class in styles.css (inputBox)
      placeholder: "Enter task...",
      css: { "border-radius": "10px" },
    });

    addTaskBoxLeftTop.append(taskInputBox);

    const addTaskBoxLeftBottom = $("<div>", {
      id: "addTaskBoxLeftBottom",
      class:
        "flex flex-wrap sm:flex-row justify-center items-center py-2 w-full",
    });

    const prioritySelector = $("<select>", {
      id: "prioritySelector",
      class: "selector mr-5",
    })
      .append(
        $("<option>", { value: "", text: "Priority", selected: true }),
        $("<option>", { value: "High", text: "High" }),
        $("<option>", { value: "Medium", text: "Medium" }),
        $("<option>", { value: "Low", text: "Low" })
      )
      .on("change", function () {
        $(this).removeClass("high-priority medium-priority low-priority");
        switch (this.value) {
          case "High":
            $(this).addClass("high-priority");
            break;
          case "Medium":
            $(this).addClass("medium-priority");
            break;
          case "Low":
            $(this).addClass("low-priority");
            break;
        }
      });
    const dateSelector = $("<input>", {
      type: "date",
      class: "selector mr-5",
      value: "",
      placeholder: "Date",
    }).on("change", function () {
      if (this.value) {
        $(this).addClass("has-date");
      } else {
        $(this).removeClass("has-date");
      }
    });

    const projectSelector = $("<select>", {
      id: "projectSelector",
      class: "selector",
    }).append($("<option>", { value: "", text: "Project", disabled: true }));

    addTaskBoxLeftBottom.append(
      prioritySelector,
      dateSelector,
      projectSelector
    );

    addTaskBoxLeft.append(addTaskBoxLeftTop, addTaskBoxLeftBottom);

    const addTaskBoxRight = $("<div>", {
      id: "addTaskBoxRight",
      class: "flex flex-1 flex-col items-center",
      style: "flex: 3",
    });

    const addTaskBoxRightTop = $("<div>", {
      id: "addTaskBoxRightTop",
      class: "h-1/2 w-full flex justify-center items-center mb-2",
    });

    const createTaskButton = $("<button>", {
      id: "createTaskButton",
      class: "createButton w-full mb-2",
      text: "Add Task",
    });

    createTaskButton.prop("disabled", true);

    createTaskButton.on("click", function () {
      const id = setTaskId();
      const name = taskInputBox.val();
      const priority = prioritySelector.val();
      const date = dateSelector.val();
      const project = projectSelector.val(); // TO-DO: Add project logic

      if (name.trim() !== "") {
        const task = new Task(id, name, priority, date, project);
        saveTask(task);

        $("#addTaskBox").remove();
        $("#contentBoxMain").prepend(taskButtonContainer);
        $("#taskButtonContainer").append(addTaskButton);

        displayTasks(); 
      }
    });

    taskInputBox.on("input", function () {
      const inputText = $(this).val();
      if (inputText.trim() !== "") {
        createTaskButton.prop("disabled", false);
      } else {
        createTaskButton.prop("disabled", true);
      }
    });

    addTaskBoxRightTop.append(createTaskButton);

    const addTaskBoxLRightBottom = $("<div>", {
      id: "addTaskBoxLRightBottom",
      class: "h-1/2 w-full flex justify-center items-center",
    });
    const third = $("<div>", {
      class: "h-1/2 w-full flex justify-center",
    });
    const fourth = $("<div>", {
      class: "h-1/2 w-full flex justify-center",
    });

    const cancelTaskButton = $("<button>", {
      id: "cancelTaskButton",
      class: "cancelButton w-full",
      text: "Cancel",
    });

    cancelTaskButton.on("click", function () {
      $("#addTaskBox").remove();
      $("#contentBoxMain").prepend(taskButtonContainer);
      $("#taskButtonContainer").append(addTaskButton);
    });

    addTaskBoxLRightBottom.append(cancelTaskButton);

    addTaskBoxRight.append(
      addTaskBoxRightTop,
      addTaskBoxLRightBottom,
      third,
      fourth
    );

    addTaskBox.append(addTaskBoxLeft, addTaskBoxRight);
    taskButtonContainer.replaceWith(addTaskBox);
  });

  const addTaskButton = $("<button>", {
    id: "addTaskButton",
    class: "addButton mb-1",
    text: "Add Task",
  });
  taskButtonContainer.append(addTaskButton);

  displayTasks();

}

function setTaskId() {
  return Date.now().toString();
}

function displayTasks() {
  const tasks = getTasks();
  const taskListContainer = $("#tasksListContainer",);
  taskListContainer.empty();

  if (tasks.length > 0) {
    tasks.sort((a, b) => b.id - a.id);
    const taskListBox = $("<div>", {
      class: "box",
    });

    tasks.forEach((task) => {
      const taskListElement = $("<div>", {
        class: "taskListElement",
        text: task.name, // TODO: Design taskListElement
      });

      taskListBox.append(taskListElement);
    });

    taskListContainer.append(taskListBox);
  }
}

export default loadTasksModule;

class Task {
  constructor(id, name, priority, date, project) {
    this.id = id;
    this.name = name;
    this.priority = priority;
    this.date = date;
    this.project = project;
  }
}

----------------------------------------

src/index.js:

import "./styles.css";
import "@fortawesome/fontawesome-free/css/all.min.css";
import $ from "jquery";
import loadDatesModule from "./dates.js";
import loadTasksModule from "./tasks.js";
import loadProjectsModule from "./projects.js";
import loadPrioritiesModule from "./priorities.js";

$(function () {
  loadTasksModule();

  $("#burgerMenu").on("click", function () {
    var icon = $(this).find("i");

    if (icon.hasClass("rotated")) {
      icon.removeClass("rotated");
    } else {
      icon.addClass("rotated");
    }

    $("#sideBar").toggle();
    $("#contentBox").toggleClass("expand");
  });

  $("#sideBarMenu > div").on("click", function () {
    $("#sideBarMenu > div").removeClass("active");
    $(this).addClass("active");

    if ($(window).width() < 1200) {
      if (this.id !== "prioritiesMenu") {
        $("#sideBar").hide();
        $("#contentBox").removeClass("expand");
      }
    }

    switch (this.id) {
      case "tasksMenu":
        loadTasksModule();
        break;
      case "prioritiesMenu":
        loadPrioritiesModule();
        break;
      case "projectsMenu":
        loadProjectsModule();
        break;
      case "datesMenu":
        loadDatesModule();
        break;
    }
  });

  $("#prioritiesMenu").on("click", function (e) {
    e.stopPropagation();
    $("#prioritiesSubMenu").toggle();
    $(this).find(".fa-chevron-right").toggleClass("rotated-down");
  });

  $("#prioritiesSubMenu > div").on("click", function (e) {
    e.stopPropagation();
  });

  $(document).on("click", function () {
    $("#prioritiesSubMenu").hide();
    $("#prioritiesMenu .fa-chevron-right").removeClass("rotated-down");
  });

  $("#tasksMenu").on("click", function () {
    loadTasksModule();
  });

  $("#projectsMenu").on("click", function () {
    loadProjectsModule();
  });

  $("#datesMenu").on("click", function () {
    loadDatesModule();
  });
});

----------------------------------------

src/index.html:

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Priorities Online</title>
</head>

<body class="flex flex-col">

    <div id="title" class="bg-stone-200 flex-center">
        Priorities Online
    </div>

    <div id="mainContainer" class="bg-stone-200 flex-center flex-col">

        <div id="mainBox" class="bg-slate-50 shadow-lg flex-center">

            <div id="burgerMenu" class="bg-stone-200 flex-center cursor-pointer">
                <i class="fas fa-bars text-stone-400 rotate-icon"></i>
            </div>

            <div id="sideBar" class="bg-zinc-300 flex-center">
                <div id="sideBarHeader">
                </div>
                <div id="sideBarMenu">
                    <div id="tasksMenu">
                        <i class="fas fa-tasks text-stone-400"></i> Tasks
                    </div>
                    <div id="prioritiesMenu">
                        <i class="fas fa-chevron-right text-stone-400"></i> Priorities
                        <div id="prioritiesSubMenu" class="hidden">
                            <div id="highPriorityMenu">High</div>
                            <div id="mediumPriorityMenu">Medium</div>
                            <div id="lowPriorityMenu">Low</div>
                        </div>
                    </div>
                    <div id="projectsMenu">
                        <i class="fas fa-folder text-stone-400"></i> Projects
                    </div>
                    <div id="datesMenu">
                        <i class="fas fa-calendar text-stone-400"></i> Dates
                    </div>
                </div>
            </div>

            <div id="contentBox" class="bg-slate-50 flex-center">
                <div id="contentBoxHeader" class="flex-center text-gray-700"></div>
                <div id="contentBoxMain" class="flex-center"></div>
            </div>

        </div>

    </div>

    <div id="footer" class="flex-2 font-arial text-zinc-400 bg-zinc-300">
        <a href="https://github.com/alexaldearroyo" target="_blank" rel="noopener noreferrer">
            <i class="fab fa-github hover:scale-125 hover:text-stone-400"></i>
        </a>
        <span>Alex Arroyo © 2023</span>
    </div>

</body>

</html>
----------------------------------------

